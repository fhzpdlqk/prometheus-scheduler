
# This workflow will build and push an application to a Azure Kubernetes Service (AKS) cluster when you push your code
#
# This workflow assumes you have already created the target AKS cluster and have created an Azure Container Registry (ACR)
# For instructions see:
#   - https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough-portal
#   - https://docs.microsoft.com/en-us/azure/container-registry/container-registry-get-started-portal
#   - https://github.com/Azure/aks-create-action
#
# To configure this workflow:
#

name: Build and deploy an app to AKS

on:
  push:
    branches:
      - "master"

env:
  AZURE_CONTAINER_REGISTRY: "aimmopostregistry"
  CONTAINER_NAME: "promescheduler"
  RESOURCE_GROUP: "backend_sandbox"
  GITHUB_SHA: ${{ github.sha }}

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
    # Checks out the repository this file is in
    - uses: actions/checkout@v3
    
    - name: Docker login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
        username: ${{ secrets.DockerID }}
        password: ${{ secrets.DockerPW }}
    
    - name: Pull Image
      run: |
        docker pull ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:latest || true
  
    # Builds and pushes an image up to your Azure Container Registry
    - name: Build Image
      run: |
        docker build -f "Dockerfile" -t ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ env.GITHUB_SHA }} ./
        
    - name: Push Image
      run: |
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ env.GITHUB_SHA }}
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:latest
          
    - name: update manifest-repo
      run: |
        sudo rm -rf /manifest-repo
        sudo mkdir /manifest-repo
        sudo chmod -R 777 /manifest-repo
        git clone https://${{ secrets.REPO_ACCESS_TOKEN }}@github.com/fhzpdlqk/monitoring.git /manifest-repo
        cd /manifest-repo
        cd overlays/dev/
        kustomize edit set image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ env.GITHUB_SHA }}
        git config --global user.email "rozencrants@naver.com"
        git config --global user.name "github action"
        git add .
        git commit -m "set new image $GITHUB_SHA tag"
        git push origin main
        
